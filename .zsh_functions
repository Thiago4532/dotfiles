function mkcd() {
    mkdir -p "$1" && cd "$1"
}
compdef _directories mkcd

function ccat() {
    pygmentize "$@" | expand -t4
}
compdef _files ccat

function nvim-clearundo() {
    tmpfile=`mktemp`

    nvim --headless \
        +"call writefile([&undodir], '$tmpfile', 'b')" \
        +q >/dev/null 2>&1

    undodir=`<"$tmpfile"`
    rm -f "$tmpfile"

    [ -z "$undodir" ] || rm -r "$undodir"
    return $?
}

function nvim-startup() {
    tempfile=`mktemp /tmp/nvim-startupXXXXXX`
    nvim --startuptime $tempfile $@ &&
        nvim -u NORC $tempfile
    rm $tempfile
}

##

function pipxvenv() {
    if [ $# -lt 1 ]; then
        echo "Error: missing argument" >&2
        echo "Usage:\n  pipxvenv <package>" >&2
        return 1
    fi

    local pkg="${PIPX_HOME-$HOME/.local/pipx}/venvs/$1"
    if ! [ -d "$pkg" ]; then
        echo "Error: failed to found the package $1" >&2
        echo "Usage:\n  pipxvenv <package>" >&2
        return 1
    fi

    if ! [ -f "$pkg/bin/activate" ]; then
        echo "Error: failed to activate" >&2
        echo "Usage:\n  pipxvenv <package>" >&2
        return 1
    fi

    . "$pkg/bin/activate"
}
compdef _pipxvenv pipxvenv

function ghcup-activate() {
    export PATH="$HOME/.ghcup/bin:$PATH"
    GHCUP_ENV=1

    function ghcup-deactivate() {
        PATH=:$PATH:
        PATH=${PATH//:$HOME\/.ghcup\/bin:/:}
        PATH=${PATH#:}; PATH=${PATH%:}
        unset -f ghcup-deactivate
        unset GHCUP_ENV
    }
}
