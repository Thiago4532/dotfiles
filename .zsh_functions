function mkcd() {
    mkdir -p "$1" && cd "$1"
}
compdef _directories mkcd

function ccat() {
    pygmentize "$@" | expand -t4
}
compdef _files ccat

function fork() {
    ( eval "$@" & )
}
compdef _precommand fork
alias ff='fork'

function noicMD() {
    local CONFIG
    CONFIG=$HOME/.config

    if [ $# -lt 2 ]; then
        echo "$fg_bold[white]USAGE: $fg_no_bold[white]$0 PROBLEM_NAME file" >&2
        return 64
    fi
    if ! [ -f "$2" ]; then
        echo "$fg_bold[white]$0: $fg[red]error: $fg_no_bold[white]$2: No such file or directory!" >&2
        return 69
    fi

    # import header
   [ -f $CONFIG/noicMD/header.html ] && cat $CONFIG/noicMD/header.html

    lowdown "$2" | sed -e 's/\$/\$\$/g' -e 's|id="problem_title">problem_title|id="problem_title" align=center>'"$1"'|g'
    
    # import footer
   [ -f $CONFIG/noicMD/footer.html ] && cat $CONFIG/noicMD/footer.html
}
compdef _files noicMD

# nvim functions

function nvim_profile() {
    sed -i 's/^--\(.*profiler\.lua\)/\1/g' ~/.config/nvim/init.lua
    (AK_PROFILER=1 nvim $@ 2>&1 >/dev/null)
    sed -i 's/^\(.*profiler\.lua\)/--\1/g' ~/.config/nvim/init.lua
}

function nvim_clearundo() {
    tmpfile=`mktemp`

    nvim --headless \
        +"call writefile([&undodir], '$tmpfile', 'b')" \
        +q >/dev/null 2>&1

    undodir=`<"$tmpfile"`
    rm -f "$tmpfile"

    rm -r "$undodir"
    return $?
}

function nvim_startup() {
    nvim --startuptime /tmp/nstartup.txt $@ &&
        nvim /tmp/nstartup.txt
    rm /tmp/nstartup.txt
}
